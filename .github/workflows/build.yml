name: Test Sonar Microservice Project

on:
  push:
    branches:
    - master
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
    - 'movie-review-app/**'
    - 'chat-app/**'
    - 'lambda/save-picture/**'

jobs:
  
  ServiceMovieReviewApp:
    name: Service-movie-review-app
    runs-on: ubuntu-latest
    if: steps.ServiceMovieReviewApp.outputs.changed == 'true'
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: movie-review-app/
          
  ServiceChatApp:
    name: service-chat-app
    runs-on: ubuntu-latest
    if: steps.ServiceChatApp.outputs.changed == 'true'
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: chat-app/
  
  LambdaSavePicture:
    name: lambda-save-picture
    runs-on: ubuntu-latest
    if: steps.LambdaSavePicture.outputs.changed == 'true'
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: lambda/save-picture/
